document.getElementById('#{h2id}').innerHTML = "";

// Spinner

var spinnerOpts = {
    lines: 13, // The number of lines to draw
    length: 15, // The length of each line
    width: 5, // The line thickness
    radius: 15, // The radius of the inner circle
    rotate: 7, // The rotation offset
    color: '#fff', // #rgb or #rrggbb
    speed: 1, // Rounds per second
    trail: 37, // Afterglow percentage
    shadow: true, // Whether to render a shadow
    hwaccel: false, // Whether to use hardware acceleration
    className: 'spinner', // The CSS class to assign to the spinner
    zIndex: 2e9, // The z-index (defaults to 2000000000)
    top: 'auto', // Top position relative to parent in px
    left: 'auto' // Left position relative to parent in px
};

var spinner = new Spinner(spinnerOpts);

// Elements

var $queryDiv = $('div#query');
var $spinnerSurfaceDiv = $('div#spinnerSurface');
var $urlEntryForm = $('form#urlEntry');
var $goButton = $('input#goButton');
var $convertButton = $('input#convertButton');

var $detailsEntryForm = $('form#detailsEntry');
var $urlText = $('input#urlText');
var $titleText = $('input#titleText');

var $convertedFileDiv = $('div#convertedFile');

var $loadingTitleProgress = $('progress#loadingTitle');

var $convertedElems = $('.converted');

$urlEntryForm.submit(function () {
    $.ajax({
        type: 'GET',
        dataType: 'json',
        url: $urlEntryForm.attr('action'),
        data: $urlEntryForm.serialize(),
        beforeSend: function () {
            console.log ($queryDiv);
            $goButton.hide();
            showSpinner();
        },
        success: function (data) {
            $urlText.attr('readonly', "readonly");
            $urlText.attr('value', data.url);
            $titleText.attr('value', data.title);
            $detailsEntryForm.fadeIn(500);
        },
        error: function (jqXHR, textStatus, errorThrown) {
            // TODO: alert user that an error occurred
            console.log (jqXHR);
            console.log (textStatus);
            console.log (errorThrown);
        },
        complete: function () {
            hideSpinner(true);
        },
    });
    return false;
});

$detailsEntryForm.submit(function () {

    combinedSerialize = $detailsEntryForm.serialize() + "&" + $urlEntryForm.serialize();

    $.ajax({
        type: 'GET',
        dataType: 'json',
        url: $detailsEntryForm.attr('action'),
        data: combinedSerialize, 
        beforeSend: function () {
            showSpinner();
            $convertButton.hide();
        },
        success: function (data) {
            console.log (data);
            $convertedFileDiv.append(getLink(data.fileType, 'convertedFile', data.path, data.fileType));
            $convertedElems.show(500);
        },
        error: function (jqXHR, textStatus, errorThrown) {
            // TODO: alert user that an error occurred
            console.log (jqXHR);
            console.log (textStatus);
            console.log (errorThrown);
        },
        complete: function () {
            hideSpinner(false); 
        },
    });
    return false;
});

// Helpers

showSpinner = function () {
    $spinnerSurfaceDiv.stop(true, true, false);
    $spinnerSurfaceDiv.height($queryDiv.outerHeight() - 15);
    $spinnerSurfaceDiv.width($queryDiv.outerWidth() - 15);
    $spinnerSurfaceDiv.fadeIn(500);

    var target = $spinnerSurfaceDiv.get(0);
    spinner.spin(target);
}

hideSpinner = function (fast) {
    $spinnerSurfaceDiv.stop(true, true, false);

    if (fast) { 
      $spinnerSurfaceDiv.hide();
    } else {
      $spinnerSurfaceDiv.fadeOut(500);
    }

    spinner.stop();    
}

getLink = function (id, clazz, href, name) {
    return '<a id="' + id + '" class="' + clazz + '" href="' + href + '">'+ name + '</a>'
};
